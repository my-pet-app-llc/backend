{
    "openapi": "3.0.0",
    "info": {
        "title": "MyPets",
        "description": "bark",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "OpenApi host"
        }
    ],
    "paths": {
        "api/documentation": {},
        "/invited-events/accept": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Accept or decline invite",
                "description": "Accept or decline invitation to event.",
                "operationId": "inviteAccept",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "accept",
                                    "invite_id"
                                ],
                                "properties": {
                                    "accept": {
                                        "description": "Must be 1 or 0. 1 - Accept, 0 - Decline",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "invite_id": {
                                        "description": "Pet invite ID",
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exist feedback from invite error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invite already accepted.|Invite already declined."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exseption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/password/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send recovery password link",
                "description": "Send link for recovery password.",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Link sended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User access errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is registered through Facebook.|You are not pet owner."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Login method",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token, pet owner and pet info and if not done registration - current step of registration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "registration_process": {
                                            "type": "boolean"
                                        },
                                        "current_step": {
                                            "type": "integer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not pet owner or credentials not match error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not pet owner.|Credentials don't match."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Logout method",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unathenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unathenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/fb/sign-in": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Facebook Login",
                "description": "Facebook Login method",
                "operationId": "loginFb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "fb_token"
                                ],
                                "properties": {
                                    "fb_token": {
                                        "description": "Facebook User Auth Token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token, pet owner and pet info and if not done registration - current step of registration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "registration_process": {
                                            "type": "boolean"
                                        },
                                        "current_step": {
                                            "type": "integer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not pet owner or Facebook error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not pet owner.|Facebook error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign-up",
                "description": "Sign-up method",
                "operationId": "signUp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "User password confirm",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/fb/sign-up": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Facebook sign-up",
                "description": "Facebook sign-up method",
                "operationId": "signUpFb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "fb_token"
                                ],
                                "properties": {
                                    "fb_token": {
                                        "description": "Facebook user auth token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Facebook error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Facebook error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Recovery password",
                "description": "Recovery password",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Reset password token",
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User access error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not pet owner."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Token parse error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid user.|Invalid password.|Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get chats",
                "description": "Get chat rooms",
                "operationId": "chatsGet",
                "responses": {
                    "200": {
                        "description": "List of chats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Chat room ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "pet_id": {
                                                "description": "Pet(friend) ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "picture": {
                                                "description": "URl of profile picture collocutor pet",
                                                "type": "string",
                                                "example": "http://mypets.com/storage/profile_picture/picture.png"
                                            },
                                            "name": {
                                                "description": "Name of collocutor pet",
                                                "type": "string",
                                                "example": "Dog"
                                            },
                                            "owner": {
                                                "description": "Owner data of collocutor pet",
                                                "properties": {
                                                    "first_name": {
                                                        "description": "Collocutor pet owner first name",
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "description": "Collocutor pet owner last name",
                                                        "type": "string",
                                                        "example": "Doe"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_read": {
                                                "description": "1 or 0. Readed chat messages - 1, Not readed chat messages - 0",
                                                "type": "integer",
                                                "example": "0"
                                            },
                                            "last_message": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Message ID",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "type": {
                                                        "description": "Message types: text, image, event",
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "message": {
                                                        "description": "This message type 'text'. Refer to another sections of the documentation to find out what data comes in different types",
                                                        "properties": {
                                                            "message": {
                                                                "description": "Displayed message",
                                                                "type": "string",
                                                                "example": "Hello world!"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "date_time_created": {
                                                        "description": "Date and time for message created.",
                                                        "type": "string",
                                                        "example": "2019-04-04 16:50:59"
                                                    },
                                                    "like": {
                                                        "description": "0 or 1. Liked - 1, Not liked - 0",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "sender": {
                                                        "description": "Who send this message",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Sender pet ID",
                                                                "type": "integer",
                                                                "example": "2"
                                                            },
                                                            "name": {
                                                                "description": "Name of sender pet",
                                                                "type": "string",
                                                                "example": "Cat"
                                                            },
                                                            "profile_picture": {
                                                                "description": "URL of the sender pet profile picture",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/profile_picture/example.jpg"
                                                            },
                                                            "owner": {
                                                                "description": "Owner data for sender pet",
                                                                "properties": {
                                                                    "first_name": {
                                                                        "description": "Sender pet owner first name",
                                                                        "type": "string",
                                                                        "example": "John"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "Sender pet owner last name",
                                                                        "type": "string",
                                                                        "example": "Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/{room_id}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat messages",
                "description": "Messages in chat",
                "operationId": "chatMessages",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page pagination. Count messages in page - 25",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Message ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "type": {
                                                "description": "Message types: text, image, event",
                                                "type": "string",
                                                "example": "image"
                                            },
                                            "message": {
                                                "description": "This message type 'image'. Refer to another sections of the documentation to find out what data comes in different types",
                                                "properties": {
                                                    "message": {
                                                        "description": "URL for image message",
                                                        "type": "string",
                                                        "example": "http://mypets.com/storage/pictures/example.com"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "date_time_created": {
                                                "description": "Date and time for message created.",
                                                "type": "string",
                                                "example": "2019-04-04 16:50:59"
                                            },
                                            "like": {
                                                "description": "0 or 1. Liked - 1, Not liked - 0",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "sender": {
                                                "description": "Who send this message",
                                                "properties": {
                                                    "id": {
                                                        "description": "Sender pet ID",
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "name": {
                                                        "description": "Name of sender pet",
                                                        "type": "string",
                                                        "example": "Cat"
                                                    },
                                                    "profile_picture": {
                                                        "description": "URL of the sender pet profile picture",
                                                        "type": "string",
                                                        "example": "http://mypets.com/storage/profile_picture/example.jpg"
                                                    },
                                                    "owner": {
                                                        "description": "Owner data for sender pet",
                                                        "properties": {
                                                            "first_name": {
                                                                "description": "Sender pet owner first name",
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "last_name": {
                                                                "description": "Sender pet owner last name",
                                                                "type": "string",
                                                                "example": "Doe"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send message",
                "description": "Send message for chat.",
                "operationId": "chatSend",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "Room ID. Send 0 if need to create a room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "message"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of message. Message types: text, image, event",
                                        "type": "string",
                                        "example": "event"
                                    },
                                    "message": {
                                        "description": "Message for send",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "pet_id": {
                                        "description": "If need create a room, send pet ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Message ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "room_id": {
                                            "description": "Room ID if room created",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "type": {
                                            "description": "Message types: text, image, event",
                                            "type": "string",
                                            "example": "event"
                                        },
                                        "message": {
                                            "description": "This message type 'event'. Refer to another sections of the documentation to find out what data comes in different types",
                                            "properties": {
                                                "message": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Invite ID",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "accepted": {
                                                            "description": "Is accept or decline ivent. 0 - Decline, 1 - Accept, null - not accept and decline",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "type": {
                                                            "description": "Social or care",
                                                            "type": "string",
                                                            "example": "social"
                                                        },
                                                        "name": {
                                                            "description": "Name of event",
                                                            "type": "string",
                                                            "example": "First event"
                                                        },
                                                        "from_date": {
                                                            "description": "Date for start event",
                                                            "type": "string",
                                                            "example": "2019-04-08"
                                                        },
                                                        "from_time": {
                                                            "description": "Time for start event",
                                                            "type": "string",
                                                            "example": "12:30"
                                                        },
                                                        "to_time": {
                                                            "description": "Time for end event",
                                                            "type": "string",
                                                            "example": "13:30"
                                                        },
                                                        "repeat": {
                                                            "description": "Numbers days of week for repeat event",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "where": {
                                                            "description": "Where will be event",
                                                            "type": "string",
                                                            "example": "Park"
                                                        },
                                                        "notes": {
                                                            "description": "Notes for event",
                                                            "type": "string",
                                                            "example": "I'm stupid"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deleted_at": {
                                                    "description": "If event has been deleted",
                                                    "type": "string",
                                                    "example": "2019-04-04 18:06:15"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "date_time_created": {
                                            "description": "Date and time for message created.",
                                            "type": "string",
                                            "example": "2019-04-04 16:50:59"
                                        },
                                        "like": {
                                            "description": "0 or 1. Liked - 1, Not liked - 0",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "sender": {
                                            "description": "Who send this message",
                                            "properties": {
                                                "id": {
                                                    "description": "Sender pet ID",
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "name": {
                                                    "description": "Name of sender pet",
                                                    "type": "string",
                                                    "example": "Cat"
                                                },
                                                "profile_picture": {
                                                    "description": "URL of the sender pet profile picture",
                                                    "type": "string",
                                                    "example": "http://mypets.com/storage/profile_picture/example.jpg"
                                                },
                                                "owner": {
                                                    "description": "Owner data for sender pet",
                                                    "properties": {
                                                        "first_name": {
                                                            "description": "Sender pet owner first name",
                                                            "type": "string",
                                                            "example": "John"
                                                        },
                                                        "last_name": {
                                                            "description": "Sender pet owner last name",
                                                            "type": "string",
                                                            "example": "Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chat"
                ],
                "summary": "Delete chat",
                "description": "Delete chat",
                "operationId": "chatDelete",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/to/read": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Read chat",
                "description": "Make chat read",
                "operationId": "chatToRead",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "room_id"
                                ],
                                "properties": {
                                    "room_id": {
                                        "description": "Room ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/cahts/is/read": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Check readed chats",
                "description": "Check readed chats",
                "operationId": "chatsIsRead",
                "responses": {
                    "200": {
                        "description": "Chats readed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_read": {
                                            "description": "0 or 1. If 1 - chats readed else chats not readed",
                                            "type": "string",
                                            "example": "0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/to/chat-search": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Search chat",
                "description": "Search chats buy pet name",
                "operationId": "chtasSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "search"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "Search by this field",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of chats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Chat room ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "picture": {
                                                "description": "URl of profile picture collocutor pet",
                                                "type": "string",
                                                "example": "http://mypets.com/storage/profile_picture/picture.png"
                                            },
                                            "name": {
                                                "description": "Name of collocutor pet",
                                                "type": "string",
                                                "example": "Dog"
                                            },
                                            "owner": {
                                                "description": "Owner data of collocutor pet",
                                                "properties": {
                                                    "first_name": {
                                                        "description": "Collocutor pet owner first name",
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "description": "Collocutor pet owner last name",
                                                        "type": "string",
                                                        "example": "Doe"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_read": {
                                                "description": "1 or 0. Readed chat messages - 1, Not readed chat messages - 0",
                                                "type": "integer",
                                                "example": "0"
                                            },
                                            "last_message": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Message ID",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "type": {
                                                        "description": "Message types: text, image, event",
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "message": {
                                                        "description": "This message type 'text'. Refer to another sections of the documentation to find out what data comes in different types",
                                                        "properties": {
                                                            "message": {
                                                                "description": "Displayed message",
                                                                "type": "string",
                                                                "example": "Hello world!"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "date_time_created": {
                                                        "description": "Date and time for message created.",
                                                        "type": "string",
                                                        "example": "2019-04-04 16:50:59"
                                                    },
                                                    "like": {
                                                        "description": "0 or 1. Liked - 1, Not liked - 0",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "sender": {
                                                        "description": "Who send this message",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Sender pet ID",
                                                                "type": "integer",
                                                                "example": "2"
                                                            },
                                                            "name": {
                                                                "description": "Name of sender pet",
                                                                "type": "string",
                                                                "example": "Cat"
                                                            },
                                                            "profile_picture": {
                                                                "description": "URL of the sender pet profile picture",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/profile_picture/example.jpg"
                                                            },
                                                            "owner": {
                                                                "description": "Owner data for sender pet",
                                                                "properties": {
                                                                    "first_name": {
                                                                        "description": "Sender pet owner first name",
                                                                        "type": "string",
                                                                        "example": "John"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "Sender pet owner last name",
                                                                        "type": "string",
                                                                        "example": "Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/{room_id}/{messages_id}/like": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Like message",
                "description": "Like message in chat. Invert like value",
                "operationId": "chatLikeMessage",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/pet/{pet_id}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get pet info",
                "description": "Get pet info for chat",
                "operationId": "getPetInfo",
                "parameters": [
                    {
                        "name": "pet_id",
                        "in": "path",
                        "description": "Pet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details for chat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Sender pet ID",
                                            "type": "integer",
                                            "example": "2"
                                        },
                                        "name": {
                                            "description": "Name of sender pet",
                                            "type": "string",
                                            "example": "Cat"
                                        },
                                        "profile_picture": {
                                            "description": "URL of the sender pet profile picture",
                                            "type": "string",
                                            "example": "http://mypets.com/storage/profile_picture/example.jpg"
                                        },
                                        "owner": {
                                            "description": "Owner data for sender pet",
                                            "properties": {
                                                "first_name": {
                                                    "description": "Sender pet owner first name",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Sender pet owner last name",
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/connect": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Get user for connect",
                "description": "Get user for connect",
                "operationId": "connect",
                "responses": {
                    "200": {
                        "description": "First find matches for user. If user not have matches - find users who are within a radius of 20 miles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "match": {
                                            "description": "If match exist - connect_id, else 0",
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "owner": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "string"
                                                },
                                                "age": {
                                                    "type": "integer"
                                                },
                                                "birthday": {
                                                    "type": "date"
                                                },
                                                "occupation": {
                                                    "type": "string"
                                                },
                                                "hobbies": {
                                                    "type": "string"
                                                },
                                                "pets_owned": {
                                                    "type": "string"
                                                },
                                                "profile_picture": {
                                                    "type": "string"
                                                },
                                                "favorite_park": {
                                                    "type": "string"
                                                },
                                                "pet": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "string"
                                                        },
                                                        "primary_breed": {
                                                            "type": "string"
                                                        },
                                                        "secondary_breed": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "friendliness": {
                                                            "type": "integer"
                                                        },
                                                        "activity_level": {
                                                            "type": "integer"
                                                        },
                                                        "noise_level": {
                                                            "type": "integer"
                                                        },
                                                        "odebience_level": {
                                                            "type": "integer"
                                                        },
                                                        "fetchability": {
                                                            "type": "integer"
                                                        },
                                                        "swimability": {
                                                            "type": "integer"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        },
                                                        "like": {
                                                            "type": "string"
                                                        },
                                                        "dislike": {
                                                            "type": "string"
                                                        },
                                                        "favorite_toys": {
                                                            "type": "string"
                                                        },
                                                        "fears": {
                                                            "type": "string"
                                                        },
                                                        "favorite_places": {
                                                            "type": "string"
                                                        },
                                                        "spayed": {
                                                            "type": "string"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "pictures": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "picture": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No users found nearby."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Connect"
                ],
                "summary": "Match accept or decline",
                "description": "Match accept or decline. Match dont exist",
                "operationId": "connectSave",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/from-data": {
                            "schema": {
                                "required": [
                                    "owner_id",
                                    "match"
                                ],
                                "properties": {
                                    "owner_id": {
                                        "description": "Owner ID for connect",
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "match": {
                                        "description": "1 - match accept, 0 - match decline",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message. Match decline or Accept. If match accept - broadcast fot connected owner.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/connect/{connect_id}": {
            "put": {
                "tags": [
                    "Connect"
                ],
                "summary": "Match accept or decline",
                "description": "Match accept or decline. For exist match",
                "operationId": "connectUpdate",
                "parameters": [
                    {
                        "name": "connect_id",
                        "in": "path",
                        "description": "Connect ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "match"
                                ],
                                "properties": {
                                    "match": {
                                        "description": "1 - match accept, 0 - match decline",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message. Match decline or Accept.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "not_seen_matches": {
                                            "description": "User has not seen matches",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model.|Not found match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get events",
                "description": "Get events for buy date. If not send date from and to - get events for current month.",
                "operationId": "eventsGet",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "From date",
                        "schema": {
                            "type": "date",
                            "format": "Y-m-d"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "To date",
                        "schema": {
                            "type": "date",
                            "format": "Y-m-d"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "date_of_selected_period": {
                                            "properties": {
                                                "event_id_as_object_key": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "from_date": {
                                                            "type": "date"
                                                        },
                                                        "from_time": {
                                                            "type": "time"
                                                        },
                                                        "to_time": {
                                                            "type": "time"
                                                        },
                                                        "repeat": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "where": {
                                                            "type": "string"
                                                        },
                                                        "is_creator": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create event",
                "description": "Create new event.",
                "operationId": "eventCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "from_date",
                                    "from_time",
                                    "to_time",
                                    "where"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of event",
                                        "type": "string",
                                        "example": "New event"
                                    },
                                    "type": {
                                        "description": "Must be social or care",
                                        "type": "string",
                                        "example": "social"
                                    },
                                    "from_date": {
                                        "description": "Date for event. Format Y-m-d. Date from now.",
                                        "type": "string",
                                        "example": "2019-03-27"
                                    },
                                    "from_time": {
                                        "description": "Time start event. Format H:i",
                                        "type": "string",
                                        "example": "12:30"
                                    },
                                    "to_time": {
                                        "description": "Time finish event. Format H:i. Must be more event start time.",
                                        "type": "string",
                                        "example": "13:30"
                                    },
                                    "repeat[0]": {
                                        "description": "Number day of week",
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "where": {
                                        "description": "Where to be event",
                                        "type": "string",
                                        "example": "Park"
                                    },
                                    "notes": {
                                        "description": "Notes for event",
                                        "type": "string",
                                        "example": "I'm stupid"
                                    },
                                    "invite[0]": {
                                        "description": "Id of the pet friends",
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Event ID",
                                            "type": "integer",
                                            "example": "3"
                                        },
                                        "type": {
                                            "description": "Type of event. Social or care",
                                            "type": "string",
                                            "example": "social"
                                        },
                                        "name": {
                                            "description": "Event name",
                                            "type": "string",
                                            "example": "First event"
                                        },
                                        "from_date": {
                                            "description": "Event start date",
                                            "type": "string",
                                            "example": "2019-03-27"
                                        },
                                        "from_time": {
                                            "description": "Event start time",
                                            "type": "string",
                                            "example": "12:30"
                                        },
                                        "to_time": {
                                            "description": "Event end time",
                                            "type": "string",
                                            "example": "13:30"
                                        },
                                        "repeat": {
                                            "type": "array",
                                            "items": {
                                                "description": "Number day of week repeat event",
                                                "type": "integer",
                                                "example": "2"
                                            }
                                        },
                                        "where": {
                                            "description": "Where event to be",
                                            "type": "string",
                                            "example": "Park"
                                        },
                                        "notes": {
                                            "description": "Event notes",
                                            "type": "string",
                                            "example": "I'm stupid"
                                        },
                                        "invited": {
                                            "type": "array",
                                            "items": {
                                                "description": "Invited pets",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "gender": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "primary_breed": {
                                                        "type": "string"
                                                    },
                                                    "secondary_breed": {
                                                        "type": "string"
                                                    },
                                                    "age": {
                                                        "type": "integer"
                                                    },
                                                    "profile_picture": {
                                                        "type": "string"
                                                    },
                                                    "friendliness": {
                                                        "type": "integer"
                                                    },
                                                    "activity_level": {
                                                        "type": "integer"
                                                    },
                                                    "noise_level": {
                                                        "type": "integer"
                                                    },
                                                    "odebience_level": {
                                                        "type": "integer"
                                                    },
                                                    "fetchability": {
                                                        "type": "integer"
                                                    },
                                                    "swimability": {
                                                        "type": "integer"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "like": {
                                                        "type": "string"
                                                    },
                                                    "dislike": {
                                                        "type": "string"
                                                    },
                                                    "favorite_toys": {
                                                        "type": "string"
                                                    },
                                                    "fears": {
                                                        "type": "string"
                                                    },
                                                    "favorite_places": {
                                                        "type": "string"
                                                    },
                                                    "spayed": {
                                                        "type": "string"
                                                    },
                                                    "birthday": {
                                                        "type": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exseption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Some friends not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/events/{event_id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event",
                "description": "Get event data.",
                "operationId": "eventGet",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Event ID",
                                            "type": "integer",
                                            "example": "3"
                                        },
                                        "type": {
                                            "description": "Type of event. Social or care",
                                            "type": "string",
                                            "example": "social"
                                        },
                                        "name": {
                                            "description": "Event name",
                                            "type": "string",
                                            "example": "First event"
                                        },
                                        "from_date": {
                                            "description": "Event start date",
                                            "type": "string",
                                            "example": "2019-03-27"
                                        },
                                        "from_time": {
                                            "description": "Event start time",
                                            "type": "string",
                                            "example": "12:30"
                                        },
                                        "to_time": {
                                            "description": "Event end time",
                                            "type": "string",
                                            "example": "13:30"
                                        },
                                        "repeat": {
                                            "type": "array",
                                            "items": {
                                                "description": "Number day of week repeat event",
                                                "type": "integer",
                                                "example": "2"
                                            }
                                        },
                                        "where": {
                                            "description": "Where event to be",
                                            "type": "string",
                                            "example": "Park"
                                        },
                                        "notes": {
                                            "description": "Event notes",
                                            "type": "string",
                                            "example": "I'm stupid"
                                        },
                                        "invited": {
                                            "type": "array",
                                            "items": {
                                                "description": "Invited pets",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "gender": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "primary_breed": {
                                                        "type": "string"
                                                    },
                                                    "secondary_breed": {
                                                        "type": "string"
                                                    },
                                                    "age": {
                                                        "type": "integer"
                                                    },
                                                    "profile_picture": {
                                                        "type": "string"
                                                    },
                                                    "friendliness": {
                                                        "type": "integer"
                                                    },
                                                    "activity_level": {
                                                        "type": "integer"
                                                    },
                                                    "noise_level": {
                                                        "type": "integer"
                                                    },
                                                    "odebience_level": {
                                                        "type": "integer"
                                                    },
                                                    "fetchability": {
                                                        "type": "integer"
                                                    },
                                                    "swimability": {
                                                        "type": "integer"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "like": {
                                                        "type": "string"
                                                    },
                                                    "dislike": {
                                                        "type": "string"
                                                    },
                                                    "favorite_toys": {
                                                        "type": "string"
                                                    },
                                                    "fears": {
                                                        "type": "string"
                                                    },
                                                    "favorite_places": {
                                                        "type": "string"
                                                    },
                                                    "spayed": {
                                                        "type": "string"
                                                    },
                                                    "birthday": {
                                                        "type": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update event",
                "description": "Update exist event.",
                "operationId": "eventUpdate",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "from_date",
                                    "from_time",
                                    "to_time",
                                    "where"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of event",
                                        "type": "string",
                                        "example": "New event"
                                    },
                                    "type": {
                                        "description": "Must be social or care",
                                        "type": "string",
                                        "example": "social"
                                    },
                                    "from_date": {
                                        "description": "Date for event. Format Y-m-d. Date from now.",
                                        "type": "string",
                                        "example": "2019-03-27"
                                    },
                                    "from_time": {
                                        "description": "Time start event. Format H:i",
                                        "type": "string",
                                        "example": "12:30"
                                    },
                                    "to_time": {
                                        "description": "Time finish event. Format H:i. Must be more event start time.",
                                        "type": "string",
                                        "example": "13:30"
                                    },
                                    "repeat[0]": {
                                        "description": "Number day of week",
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "where": {
                                        "description": "Where to be event",
                                        "type": "string",
                                        "example": "Park"
                                    },
                                    "notes": {
                                        "description": "Notes for event",
                                        "type": "string",
                                        "example": "I'm stupid"
                                    },
                                    "invite[0]": {
                                        "description": "ID of the pet friends for new invite",
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Event ID",
                                            "type": "integer",
                                            "example": "3"
                                        },
                                        "type": {
                                            "description": "Type of event. Social or care",
                                            "type": "string",
                                            "example": "social"
                                        },
                                        "name": {
                                            "description": "Event name",
                                            "type": "string",
                                            "example": "First event"
                                        },
                                        "from_date": {
                                            "description": "Event start date",
                                            "type": "string",
                                            "example": "2019-03-27"
                                        },
                                        "from_time": {
                                            "description": "Event start time",
                                            "type": "string",
                                            "example": "12:30"
                                        },
                                        "to_time": {
                                            "description": "Event end time",
                                            "type": "string",
                                            "example": "13:30"
                                        },
                                        "repeat": {
                                            "type": "array",
                                            "items": {
                                                "description": "Number day of week repeat event",
                                                "type": "integer",
                                                "example": "2"
                                            }
                                        },
                                        "where": {
                                            "description": "Where event to be",
                                            "type": "string",
                                            "example": "Park"
                                        },
                                        "notes": {
                                            "description": "Event notes",
                                            "type": "string",
                                            "example": "I'm stupid"
                                        },
                                        "invited": {
                                            "type": "array",
                                            "items": {
                                                "description": "Invited pets",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "gender": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "primary_breed": {
                                                        "type": "string"
                                                    },
                                                    "secondary_breed": {
                                                        "type": "string"
                                                    },
                                                    "age": {
                                                        "type": "integer"
                                                    },
                                                    "profile_picture": {
                                                        "type": "string"
                                                    },
                                                    "friendliness": {
                                                        "type": "integer"
                                                    },
                                                    "activity_level": {
                                                        "type": "integer"
                                                    },
                                                    "noise_level": {
                                                        "type": "integer"
                                                    },
                                                    "odebience_level": {
                                                        "type": "integer"
                                                    },
                                                    "fetchability": {
                                                        "type": "integer"
                                                    },
                                                    "swimability": {
                                                        "type": "integer"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "like": {
                                                        "type": "string"
                                                    },
                                                    "dislike": {
                                                        "type": "string"
                                                    },
                                                    "favorite_toys": {
                                                        "type": "string"
                                                    },
                                                    "fears": {
                                                        "type": "string"
                                                    },
                                                    "favorite_places": {
                                                        "type": "string"
                                                    },
                                                    "spayed": {
                                                        "type": "string"
                                                    },
                                                    "birthday": {
                                                        "type": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exseption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Some friends not found.|No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete event",
                "description": "Delete exist event.",
                "operationId": "eventDelete",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exseption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/events/friends/{event_id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Friends of pet for event.",
                "description": "Get friends of pet who were not invited or declined the invited.",
                "operationId": "eventsFriends",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "Event ID if event already exist",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friends of pet who were not invited or declined the invited.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "gender": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "string"
                                            },
                                            "primary_breed": {
                                                "type": "string"
                                            },
                                            "secondary_breed": {
                                                "type": "string"
                                            },
                                            "age": {
                                                "type": "integer"
                                            },
                                            "profile_picture": {
                                                "type": "string"
                                            },
                                            "friendliness": {
                                                "type": "integer"
                                            },
                                            "activity_level": {
                                                "type": "integer"
                                            },
                                            "noise_level": {
                                                "type": "integer"
                                            },
                                            "odebience_level": {
                                                "type": "integer"
                                            },
                                            "fetchability": {
                                                "type": "integer"
                                            },
                                            "swimability": {
                                                "type": "integer"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "like": {
                                                "type": "string"
                                            },
                                            "dislike": {
                                                "type": "string"
                                            },
                                            "favorite_toys": {
                                                "type": "string"
                                            },
                                            "fears": {
                                                "type": "string"
                                            },
                                            "favorite_places": {
                                                "type": "string"
                                            },
                                            "spayed": {
                                                "type": "string"
                                            },
                                            "birthday": {
                                                "type": "date"
                                            },
                                            "pictures": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "picture": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exseption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friends": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "All friends",
                "description": "Get pet friends.",
                "operationId": "friendsAll",
                "responses": {
                    "200": {
                        "description": "Friends of pet.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "gender": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "string"
                                            },
                                            "primary_breed": {
                                                "type": "string"
                                            },
                                            "secondary_breed": {
                                                "type": "string"
                                            },
                                            "age": {
                                                "type": "integer"
                                            },
                                            "profile_picture": {
                                                "type": "string"
                                            },
                                            "friendliness": {
                                                "type": "integer"
                                            },
                                            "activity_level": {
                                                "type": "integer"
                                            },
                                            "noise_level": {
                                                "type": "integer"
                                            },
                                            "odebience_level": {
                                                "type": "integer"
                                            },
                                            "fetchability": {
                                                "type": "integer"
                                            },
                                            "swimability": {
                                                "type": "integer"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "like": {
                                                "type": "string"
                                            },
                                            "dislike": {
                                                "type": "string"
                                            },
                                            "favorite_toys": {
                                                "type": "string"
                                            },
                                            "fears": {
                                                "type": "string"
                                            },
                                            "favorite_places": {
                                                "type": "string"
                                            },
                                            "spayed": {
                                                "type": "string"
                                            },
                                            "birthday": {
                                                "type": "date"
                                            },
                                            "pictures": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "picture": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friend-requests": {
            "get": {
                "tags": [
                    "Friend Requests"
                ],
                "summary": "Get friend requests",
                "description": "Get all friend requests",
                "operationId": "friendRequestsGet",
                "responses": {
                    "200": {
                        "description": "First find matches for user. If user not have matches - find users who are within a radius of 20 miles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Friiend Request ID",
                                            "type": "integer"
                                        },
                                        "owner": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "string"
                                                },
                                                "age": {
                                                    "type": "integer"
                                                },
                                                "birthday": {
                                                    "type": "date"
                                                },
                                                "occupation": {
                                                    "type": "string"
                                                },
                                                "hobbies": {
                                                    "type": "string"
                                                },
                                                "pets_owned": {
                                                    "type": "string"
                                                },
                                                "profile_picture": {
                                                    "type": "string"
                                                },
                                                "favorite_park": {
                                                    "type": "string"
                                                },
                                                "pet": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "string"
                                                        },
                                                        "primary_breed": {
                                                            "type": "string"
                                                        },
                                                        "secondary_breed": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "friendliness": {
                                                            "type": "integer"
                                                        },
                                                        "activity_level": {
                                                            "type": "integer"
                                                        },
                                                        "noise_level": {
                                                            "type": "integer"
                                                        },
                                                        "odebience_level": {
                                                            "type": "integer"
                                                        },
                                                        "fetchability": {
                                                            "type": "integer"
                                                        },
                                                        "swimability": {
                                                            "type": "integer"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        },
                                                        "like": {
                                                            "type": "string"
                                                        },
                                                        "dislike": {
                                                            "type": "string"
                                                        },
                                                        "favorite_toys": {
                                                            "type": "string"
                                                        },
                                                        "fears": {
                                                            "type": "string"
                                                        },
                                                        "favorite_places": {
                                                            "type": "string"
                                                        },
                                                        "spayed": {
                                                            "type": "string"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No users found nearby."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Friend Requests"
                ],
                "summary": "Make friend request",
                "description": "Make friend request",
                "operationId": "friendRequestSave",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/from-data": {
                            "schema": {
                                "required": [
                                    "match"
                                ],
                                "properties": {
                                    "owner_id": {
                                        "description": "Owner id for friend request",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request stored.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friend-requests/{friend_reques_id}": {
            "put": {
                "tags": [
                    "Friend Requests"
                ],
                "summary": "Accept or decline request",
                "description": "Accept or decline friend request",
                "parameters": [
                    {
                        "name": "friend_reques_id",
                        "in": "path",
                        "description": "Friend Request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "accept": {
                                        "description": "If 1 - accepte friend request, if 0 - decline",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model.|Request not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/index": {
            "get": {
                "tags": [
                    "Main"
                ],
                "summary": "Main API call",
                "description": "Main API call",
                "operationId": "mainCall",
                "responses": {
                    "200": {
                        "description": "Main info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "friend_requests_count": {
                                            "description": "Friend requests count",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "new_matches_count": {
                                            "description": "New matches count",
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/location": {
            "get": {
                "tags": [
                    "Connect"
                ],
                "summary": "Update location",
                "description": "Update user location",
                "operationId": "loctionUpdate",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Latitude",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Longitude",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated location successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/materials": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Get materials",
                "description": "Get list of partner materials",
                "operationId": "materialsGet",
                "responses": {
                    "200": {
                        "description": "List of partner materials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Material ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "image": {
                                                "description": "URL of the materialimage",
                                                "type": "string",
                                                "example": "http://mypets.com/storage/materials/example.com"
                                            },
                                            "title": {
                                                "description": "Title of material",
                                                "type": "string",
                                                "example": "Title"
                                            },
                                            "short_text": {
                                                "description": "Short text for preview material",
                                                "type": "string",
                                                "example": "That's short text"
                                            },
                                            "full_text": {
                                                "description": "Full text of material",
                                                "type": "string",
                                                "example": "That's long long full text...."
                                            },
                                            "address": {
                                                "description": "Address of partner",
                                                "type": "string",
                                                "example": "Avenida Corrientes 1400, Автономный город Буэнос-Айрес, Аргентина"
                                            },
                                            "lat": {
                                                "description": "Latitude for address of partner",
                                                "type": "string",
                                                "example": "12.23324234"
                                            },
                                            "lng": {
                                                "description": "Longitude for address of partner",
                                                "type": "string",
                                                "example": "-34.123213123"
                                            },
                                            "phone_number": {
                                                "description": "Phone number of partner",
                                                "type": "string",
                                                "example": "(098) 764-1920"
                                            },
                                            "website": {
                                                "description": "Website of partner",
                                                "type": "string",
                                                "example": "https://google.com"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/materials/{material_id}": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Material details",
                "description": "Get material details",
                "operationId": "materialsDetails",
                "parameters": [
                    {
                        "name": "material_id",
                        "in": "path",
                        "description": "Material ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of partner materials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Material ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "image": {
                                            "description": "URL of the materialimage",
                                            "type": "string",
                                            "example": "http://mypets.com/storage/materials/example.com"
                                        },
                                        "title": {
                                            "description": "Title of material",
                                            "type": "string",
                                            "example": "Title"
                                        },
                                        "short_text": {
                                            "description": "Short text for preview material",
                                            "type": "string",
                                            "example": "That's short text"
                                        },
                                        "full_text": {
                                            "description": "Full text of material",
                                            "type": "string",
                                            "example": "That's long long full text...."
                                        },
                                        "address": {
                                            "description": "Address of partner",
                                            "type": "string",
                                            "example": "Avenida Corrientes 1400, Автономный город Буэнос-Айрес, Аргентина"
                                        },
                                        "lat": {
                                            "description": "Latitude for address of partner",
                                            "type": "string",
                                            "example": "12.23324234"
                                        },
                                        "lng": {
                                            "description": "Longitude for address of partner",
                                            "type": "string",
                                            "example": "-34.123213123"
                                        },
                                        "phone_number": {
                                            "description": "Phone number of partner",
                                            "type": "string",
                                            "example": "(098) 764-1920"
                                        },
                                        "website": {
                                            "description": "Website of partner",
                                            "type": "string",
                                            "example": "https://google.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/pets/{pet_id}": {
            "get": {
                "tags": [
                    "Other Profile"
                ],
                "summary": "Get other profile info",
                "description": "Other pet and owner profile with friends",
                "operationId": "getOtherProfile",
                "parameters": [
                    {
                        "name": "pet_id",
                        "in": "path",
                        "description": "Pet ID whose profile you want to see",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Owner, pet and her friends data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Owner ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "first_name": {
                                            "description": "Owner first name",
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "description": "Owner last name",
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "gender": {
                                            "description": "Owner gender",
                                            "type": "string",
                                            "example": "male"
                                        },
                                        "age": {
                                            "description": "Owner age",
                                            "type": "integer",
                                            "example": "11"
                                        },
                                        "birthday": {
                                            "description": "Owner birthday",
                                            "type": "string",
                                            "example": "1970-01-01"
                                        },
                                        "occupation": {
                                            "description": "Owner occupation",
                                            "type": "string",
                                            "example": "Developer"
                                        },
                                        "hobbies": {
                                            "description": "Owner hobbies",
                                            "type": "string",
                                            "example": "Development"
                                        },
                                        "pets_owned": {
                                            "description": "Owner pets owned",
                                            "type": "string",
                                            "example": "33 cows"
                                        },
                                        "profile_picture": {
                                            "description": "Owner profile picture URL",
                                            "type": "string",
                                            "example": "http://mypets.com/storage/profile_picture/example.png"
                                        },
                                        "favorite_park": {
                                            "description": "Owner favorite pet park",
                                            "type": "string",
                                            "example": "Park"
                                        },
                                        "pet": {
                                            "properties": {
                                                "id": {
                                                    "description": "Pet ID",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "description": "Pet name",
                                                    "type": "string",
                                                    "example": "Pet"
                                                },
                                                "gender": {
                                                    "description": "Pet gender",
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "size": {
                                                    "description": "Pet size",
                                                    "type": "string",
                                                    "example": "giant"
                                                },
                                                "primary_breed": {
                                                    "description": "Pet primary breed",
                                                    "type": "string",
                                                    "example": "Dog"
                                                },
                                                "secondary_breed": {
                                                    "description": "Pet secondary breed",
                                                    "type": "string",
                                                    "example": "Cat"
                                                },
                                                "age": {
                                                    "description": "Pet age",
                                                    "type": "integer",
                                                    "example": "11"
                                                },
                                                "profile_picture": {
                                                    "description": "Pet profile picture URL",
                                                    "type": "string",
                                                    "example": "http://mypets.com/storage/profile_picture/example.png"
                                                },
                                                "friendliness": {
                                                    "description": "Pet friendliness",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "activity_level": {
                                                    "description": "Pet activity level",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "noise_level": {
                                                    "description": "Pet noise level",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "odebience_level": {
                                                    "description": "Pet odebience level",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "fetchability": {
                                                    "description": "Pet fetchability",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "swimability": {
                                                    "description": "Pet swimability",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "city": {
                                                    "description": "Pet city",
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "state": {
                                                    "description": "Pet state",
                                                    "type": "string",
                                                    "example": "NY"
                                                },
                                                "like": {
                                                    "description": "Pet likes",
                                                    "type": "string",
                                                    "example": "Apples"
                                                },
                                                "dislike": {
                                                    "description": "Pet dislikes",
                                                    "type": "string",
                                                    "example": "Bananas"
                                                },
                                                "favorite_toys": {
                                                    "description": "Pet favorite toys",
                                                    "type": "string",
                                                    "example": "iPhone"
                                                },
                                                "fears": {
                                                    "description": "Pet fears",
                                                    "type": "string",
                                                    "example": "Water"
                                                },
                                                "favorite_places": {
                                                    "description": "Pet favorite places",
                                                    "type": "string",
                                                    "example": "Park"
                                                },
                                                "spayed": {
                                                    "description": "Pet spayed. If 0 - not spayed, if 1 - spayed",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "birthday": {
                                                    "description": "Pet birthday",
                                                    "type": "string",
                                                    "example": "2000-01-24"
                                                },
                                                "pictures": {
                                                    "description": "Pet pictures",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "Picture ID",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "picture": {
                                                                "description": "URL of picture",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/pictures/example.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "friends": {
                                                    "description": "Pet friends only those who are friends with an authenticated user.",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "Pet ID",
                                                                "type": "integer",
                                                                "example": "2"
                                                            },
                                                            "name": {
                                                                "description": "Pet name",
                                                                "type": "string",
                                                                "example": "Nona"
                                                            },
                                                            "gender": {
                                                                "description": "Pet gender",
                                                                "type": "string",
                                                                "example": "male"
                                                            },
                                                            "size": {
                                                                "description": "Pet size",
                                                                "type": "string",
                                                                "example": "giant"
                                                            },
                                                            "primary_breed": {
                                                                "description": "Pet primary breed",
                                                                "type": "string",
                                                                "example": "Dog"
                                                            },
                                                            "secondary_breed": {
                                                                "description": "Pet secondary breed",
                                                                "type": "string",
                                                                "example": "Pit"
                                                            },
                                                            "age": {
                                                                "description": "Pet age",
                                                                "type": "integer",
                                                                "example": "11"
                                                            },
                                                            "profile_picture": {
                                                                "description": "Pet profile picture URL",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/profile_picture/example.png"
                                                            },
                                                            "friendliness": {
                                                                "description": "Pet friendliness",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "activity_level": {
                                                                "description": "Pet activity level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "noise_level": {
                                                                "description": "Pet noise level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "odebience_level": {
                                                                "description": "Pet odebience level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "fetchability": {
                                                                "description": "Pet fetchability",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "swimability": {
                                                                "description": "Pet swimability",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "city": {
                                                                "description": "Pet city",
                                                                "type": "string",
                                                                "example": "New York"
                                                            },
                                                            "state": {
                                                                "description": "Pet state",
                                                                "type": "string",
                                                                "example": "NY"
                                                            },
                                                            "like": {
                                                                "description": "Pet likes",
                                                                "type": "string",
                                                                "example": "Apples"
                                                            },
                                                            "dislike": {
                                                                "description": "Pet dislikes",
                                                                "type": "string",
                                                                "example": "Bananas"
                                                            },
                                                            "favorite_toys": {
                                                                "description": "Pet favorite toys",
                                                                "type": "string",
                                                                "example": "iPhone"
                                                            },
                                                            "fears": {
                                                                "description": "Pet fears",
                                                                "type": "string",
                                                                "example": "Water"
                                                            },
                                                            "favorite_places": {
                                                                "description": "Pet favorite places",
                                                                "type": "string",
                                                                "example": "Park"
                                                            },
                                                            "spayed": {
                                                                "description": "Pet spayed. If 0 - not spayed, if 1 - spayed",
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "birthday": {
                                                                "description": "Pet birthday",
                                                                "type": "date",
                                                                "example": "2000-01-24"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "is_friends": {
                                            "description": "Are users friends",
                                            "type": "boolean"
                                        },
                                        "to_friend_request": {
                                            "description": "Can send a friend request to the user",
                                            "type": "boolean"
                                        },
                                        "to_send_message": {
                                            "description": "Can send a message to the user",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile data",
                "description": "Get profile data.",
                "operationId": "profile",
                "responses": {
                    "200": {
                        "description": "Success message, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "friends": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "gender": {
                                                                                "type": "string"
                                                                            },
                                                                            "size": {
                                                                                "type": "string"
                                                                            },
                                                                            "primary_breed": {
                                                                                "type": "string"
                                                                            },
                                                                            "secondary_breed": {
                                                                                "type": "string"
                                                                            },
                                                                            "age": {
                                                                                "type": "integer"
                                                                            },
                                                                            "profile_picture": {
                                                                                "type": "string"
                                                                            },
                                                                            "friendliness": {
                                                                                "type": "integer"
                                                                            },
                                                                            "activity_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "noise_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "odebience_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fetchability": {
                                                                                "type": "integer"
                                                                            },
                                                                            "swimability": {
                                                                                "type": "integer"
                                                                            },
                                                                            "city": {
                                                                                "type": "string"
                                                                            },
                                                                            "state": {
                                                                                "type": "string"
                                                                            },
                                                                            "like": {
                                                                                "type": "string"
                                                                            },
                                                                            "dislike": {
                                                                                "type": "string"
                                                                            },
                                                                            "favorite_toys": {
                                                                                "type": "string"
                                                                            },
                                                                            "fears": {
                                                                                "type": "string"
                                                                            },
                                                                            "favorite_places": {
                                                                                "type": "string"
                                                                            },
                                                                            "spayed": {
                                                                                "type": "string"
                                                                            },
                                                                            "birthday": {
                                                                                "type": "date"
                                                                            },
                                                                            "pictures": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "id": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "picture": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile",
                "description": "Update owner and pet profiles.",
                "operationId": "profileUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "owner[first_name]",
                                    "owner[last_name]",
                                    "owner[gender]",
                                    "owner[birthday]",
                                    "owner[occupation]",
                                    "owner[hobbies]",
                                    "owner[favorite_park]",
                                    "owner[pets_owned]",
                                    "pet[friendliness]",
                                    "pet[activity_level]",
                                    "pet[noise_level]",
                                    "pet[odebience_level]",
                                    "pet[fetchability]",
                                    "pet[swimability]",
                                    "pet[name]",
                                    "pet[gender]",
                                    "pet[spayed]",
                                    "pet[size]",
                                    "pet[age]",
                                    "pet[birthday]",
                                    "pet[city]",
                                    "pet[state]",
                                    "pet[like]",
                                    "pet[dislike]",
                                    "pet[favorite_toys]",
                                    "pet[fears]",
                                    "pet[favorite_places]"
                                ],
                                "properties": {
                                    "owner[first_name]": {
                                        "description": "Owner first name. Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string",
                                        "example": "Bob"
                                    },
                                    "owner[last_name]": {
                                        "description": "Owner last name.  Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string",
                                        "example": "Marley"
                                    },
                                    "owner[gender]": {
                                        "description": "Owner gender. Rules: required, min - 1, max - 20, RegExp - ^(male|female|[[:alpha:]]+)$",
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "owner[birthday]": {
                                        "description": "Owner date of birthday. Rules: required, format - 'Y-m-d', before - 'now - 1 day'",
                                        "type": "date",
                                        "example": "2000-01-01"
                                    },
                                    "owner[occupation]": {
                                        "description": "Owner occupation. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Developer"
                                    },
                                    "owner[hobbies]": {
                                        "description": "Owner hobbies. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Bike"
                                    },
                                    "owner[favorite_park]": {
                                        "description": "Owner favorite dog park. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Tarasa Shevchenka"
                                    },
                                    "owner[pets_owned]": {
                                        "description": "Owner pets owned. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "33 cows"
                                    },
                                    "owner[profile_picture]": {
                                        "description": "Owner profile picture. Rules: optional, correct base64 string",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "pet[friendliness]": {
                                        "description": "Pet friendliness. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "pet[activity_level]": {
                                        "description": "Pet activity level. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "pet[noise_level]": {
                                        "description": "Pet noise level. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "pet[odebience_level]": {
                                        "description": "Pet odebience level. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "pet[fetchability]": {
                                        "description": "Pet fetchability. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "4"
                                    },
                                    "pet[swimability]": {
                                        "description": "Pet swimability. Rules: required, min - 1, max - 5",
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "pet[name]": {
                                        "description": "Pet name. Rules: required, min - 1, max - 12, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string",
                                        "example": "Dolly"
                                    },
                                    "pet[gender]": {
                                        "description": "Pet gender. Rules: required, in - [male, female]",
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "pet[spayed]": {
                                        "description": "Pet spayed? Rules: required, in - [0, 1]",
                                        "type": "integer",
                                        "example": "0"
                                    },
                                    "pet[size]": {
                                        "description": "Pet size. Rules: required, in - [small, medium, large, giant]",
                                        "type": "string",
                                        "example": "giant"
                                    },
                                    "pet[age]": {
                                        "description": "Pet age. Rules: required, min - 1, max - 99",
                                        "type": "integer",
                                        "example": "18"
                                    },
                                    "pet[birthday]": {
                                        "description": "Pet date of birthday. Rules: required, format - 'Y-m-d', before - 'now - 1 day'",
                                        "type": "date",
                                        "example": "1996-06-28"
                                    },
                                    "pet[city]": {
                                        "description": "Pet hometown. Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string",
                                        "example": "New-York"
                                    },
                                    "pet[state]": {
                                        "description": "Pet state. Rules: required, min - 2, max - 3, RegExp - ^[A-Z]{2,3}$",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "pet[like]": {
                                        "description": "Pet likes. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Orange"
                                    },
                                    "pet[dislike]": {
                                        "description": "Pet dislikes. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "McDonald's"
                                    },
                                    "pet[favorite_toys]": {
                                        "description": "Pet favorite toys. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Mr. Sandman"
                                    },
                                    "pet[fears]": {
                                        "description": "Pet fears. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Death"
                                    },
                                    "pet[favorite_places]": {
                                        "description": "Pet favorite places. Rules: required, min - 1, max - 128",
                                        "type": "string",
                                        "example": "Land"
                                    },
                                    "pet[profile_picture]": {
                                        "description": "Pet profile picture. Rules: optional, correct base64 string",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "pet[pictures][create][0]": {
                                        "description": "Upload pet pictures. Rules: optional, correct base64 string",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "pet[pictures][delete][0]": {
                                        "description": "Delete pet picture. Rules: optional, picture id, exists in pet pictures",
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "friends": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "gender": {
                                                                                "type": "string"
                                                                            },
                                                                            "size": {
                                                                                "type": "string"
                                                                            },
                                                                            "primary_breed": {
                                                                                "type": "string"
                                                                            },
                                                                            "secondary_breed": {
                                                                                "type": "string"
                                                                            },
                                                                            "age": {
                                                                                "type": "integer"
                                                                            },
                                                                            "profile_picture": {
                                                                                "type": "string"
                                                                            },
                                                                            "friendliness": {
                                                                                "type": "integer"
                                                                            },
                                                                            "activity_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "noise_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "odebience_level": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fetchability": {
                                                                                "type": "integer"
                                                                            },
                                                                            "swimability": {
                                                                                "type": "integer"
                                                                            },
                                                                            "city": {
                                                                                "type": "string"
                                                                            },
                                                                            "state": {
                                                                                "type": "string"
                                                                            },
                                                                            "like": {
                                                                                "type": "string"
                                                                            },
                                                                            "dislike": {
                                                                                "type": "string"
                                                                            },
                                                                            "favorite_toys": {
                                                                                "type": "string"
                                                                            },
                                                                            "fears": {
                                                                                "type": "string"
                                                                            },
                                                                            "favorite_places": {
                                                                                "type": "string"
                                                                            },
                                                                            "spayed": {
                                                                                "type": "string"
                                                                            },
                                                                            "birthday": {
                                                                                "type": "date"
                                                                            },
                                                                            "pictures": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "id": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "picture": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/report": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report for user",
                "description": "Report for user. Create ticket and create two chats",
                "operationId": "reportForUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "pet_id",
                                    "reason"
                                ],
                                "properties": {
                                    "pet_id": {
                                        "description": "Reported pet ID",
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "reason": {
                                        "description": "Report reason",
                                        "type": "string",
                                        "example": "He is stuppid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New ticket data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ticket_id": {
                                            "description": "New ticket ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "room_id": {
                                            "description": "New room id for ticket",
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sign-up/stepper": {
            "get": {
                "tags": [
                    "Signup Steps"
                ],
                "summary": "Get stepper info",
                "description": "Sign-up stepper information about owner and her pet.",
                "operationId": "getStpperInfo",
                "responses": {
                    "200": {
                        "description": "Current step of user, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_step": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "integer"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error if user done registration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Registration is  done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Signup Steps"
                ],
                "summary": "Update owner and pet info for sign-up steps",
                "description": "Update information for owner and pet for any steps.",
                "operationId": "updateStepperInfo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "step"
                                ],
                                "properties": {
                                    "step": {
                                        "description": "Required for all steps. If will be send '0' - end registration. Steps count - 12.",
                                        "type": "integer"
                                    },
                                    "owner[first_name]": {
                                        "description": "Step 1. Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string"
                                    },
                                    "owner[last_name]": {
                                        "description": "Step 1. Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string"
                                    },
                                    "pet[name]": {
                                        "description": "Step 1. Rules: required, min - 1, max - 12, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string"
                                    },
                                    "pet[city]": {
                                        "description": "Step 1. Rules: required, min - 1, max - 15, RegExp - ^([[:alpha:]-]+ ?)+$",
                                        "type": "string"
                                    },
                                    "pet[state]": {
                                        "description": "Step 1. Rules: required, min - 2, max - 3, RegExp - ^[A-Z]{2,3}$",
                                        "type": "string"
                                    },
                                    "pet[gender]": {
                                        "description": "Step 2. Rules: reuqired, in - [male, female]",
                                        "type": "string"
                                    },
                                    "pet[size]": {
                                        "description": "Step 2. Rules: required, in - [small, medium, large, giant]",
                                        "type": "string"
                                    },
                                    "pet[primary_breed]": {
                                        "description": "Step 3. Rules: required, min - 1, max - 50",
                                        "type": "string"
                                    },
                                    "pet[secondary_breed]": {
                                        "description": "Step 3. Rules: min - 1, max - 50",
                                        "type": "string"
                                    },
                                    "pet[age]": {
                                        "description": "Step 3. Rules: required, min - 1, max - 99",
                                        "type": "integer"
                                    },
                                    "pet[profile_picture]": {
                                        "description": "Step 4. base64 string. Rules: required if pet not has profile picture, correct base64 string, types - 'jpg', 'png'",
                                        "type": "string"
                                    },
                                    "pet[pictures][create][0]": {
                                        "description": "Step 5. base64 string. Rules: optional, correct base64 string, types - 'jpg', 'png'",
                                        "type": "string"
                                    },
                                    "pet[pictures][delete][0]": {
                                        "description": "Step 5. Uploaded pictures ids. Rule: optional, exist in pet pictures ids",
                                        "type": "integer"
                                    },
                                    "pet[friendliness]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[activity_level]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[noise_level]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[odebience_level]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[fetchability]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[swimability]": {
                                        "description": "Step 6. Rules: required, min - 1, max - 5",
                                        "type": "integer"
                                    },
                                    "pet[like]": {
                                        "description": "Step 8. Rules: required, min - 1, max - 128",
                                        "type": "string"
                                    },
                                    "pet[dislike]": {
                                        "description": "Step 8. Rules: required, min - 1, max - 128",
                                        "type": "string"
                                    },
                                    "pet[favorite_toys]": {
                                        "description": "Step 9. Rules: required, min - 1, max - 128",
                                        "type": "string"
                                    },
                                    "pet[fears]": {
                                        "description": "Step 9. Rules: required, min - 1, max - 128",
                                        "type": "string"
                                    },
                                    "pet[favorite_places]": {
                                        "description": "Step 10. Rules: required, min - 1, max - 128",
                                        "type": "string"
                                    },
                                    "owner[gender]": {
                                        "description": "Step 11. Rules: required, min - 1, max - 20, RegExp - ^(male|female|[[:alpha:]]+)$",
                                        "type": "string"
                                    },
                                    "owner[age]": {
                                        "description": "Step 11. Rules: required, min - 0, max - 99",
                                        "type": "integer"
                                    },
                                    "owner[profile_picture]": {
                                        "description": "Step 12. base64 string. Rules: required if owner not has profile picture, correct base64 string, types - 'jpg', 'png'",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message, pet owner and pet info.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "owner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "first_name": {
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "type": "string"
                                                        },
                                                        "age": {
                                                            "type": "integer"
                                                        },
                                                        "birthday": {
                                                            "type": "date"
                                                        },
                                                        "occupation": {
                                                            "type": "string"
                                                        },
                                                        "hobbies": {
                                                            "type": "string"
                                                        },
                                                        "pets_owned": {
                                                            "type": "string"
                                                        },
                                                        "profile_picture": {
                                                            "type": "string"
                                                        },
                                                        "favorite_park": {
                                                            "type": "string"
                                                        },
                                                        "pet": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "gender": {
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "type": "string"
                                                                },
                                                                "primary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "secondary_breed": {
                                                                    "type": "string"
                                                                },
                                                                "age": {
                                                                    "type": "integer"
                                                                },
                                                                "profile_picture": {
                                                                    "type": "string"
                                                                },
                                                                "friendliness": {
                                                                    "type": "integer"
                                                                },
                                                                "activity_level": {
                                                                    "type": "integer"
                                                                },
                                                                "noise_level": {
                                                                    "type": "integer"
                                                                },
                                                                "odebience_level": {
                                                                    "type": "integer"
                                                                },
                                                                "fetchability": {
                                                                    "type": "integer"
                                                                },
                                                                "swimability": {
                                                                    "type": "integer"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "like": {
                                                                    "type": "string"
                                                                },
                                                                "dislike": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_toys": {
                                                                    "type": "string"
                                                                },
                                                                "fears": {
                                                                    "type": "string"
                                                                },
                                                                "favorite_places": {
                                                                    "type": "string"
                                                                },
                                                                "spayed": {
                                                                    "type": "string"
                                                                },
                                                                "birthday": {
                                                                    "type": "date"
                                                                },
                                                                "pictures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "picture": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error if user done registration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Registration is  done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get chats",
                "description": "Get all chats for support",
                "operationId": "getSupportChats",
                "responses": {
                    "200": {
                        "description": "All chats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Chat room ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "ticket_no": {
                                                "description": "Ticket ID as chat name",
                                                "type": "string",
                                                "example": "2"
                                            },
                                            "writable": {
                                                "description": "The ability to write in chat",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_read": {
                                                "description": "Are there any unread messages in the chat",
                                                "type": "integer",
                                                "example": "0"
                                            },
                                            "last_message": {
                                                "description": "Last message in chat",
                                                "properties": {
                                                    "id": {
                                                        "description": "Message ID",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "type": {
                                                        "description": "Message type. Can be system, text and image",
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "message": {
                                                        "description": "Message object. For all message types has one property. For system and text type just text. For image type - path to image",
                                                        "properties": {
                                                            "message": {
                                                                "description": "Message text or path to image",
                                                                "type": "string",
                                                                "example": "Hello World!"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "date_time_created": {
                                                        "description": "Date and time message created",
                                                        "type": "string",
                                                        "example": "2019-04-18 10:00:00"
                                                    },
                                                    "is_like": {
                                                        "description": "Like message",
                                                        "type": "integer",
                                                        "example": "0"
                                                    },
                                                    "sender": {
                                                        "description": "Owner object or null if message sended admin",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Owner ID",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "first_name": {
                                                                "description": "Owner first name",
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "last_name": {
                                                                "description": "Owner last name",
                                                                "type": "string",
                                                                "example": "Doe"
                                                            },
                                                            "gender": {
                                                                "description": "Owner gender",
                                                                "type": "string",
                                                                "example": "male"
                                                            },
                                                            "age": {
                                                                "description": "Owner age",
                                                                "type": "integer",
                                                                "example": "12"
                                                            },
                                                            "birthday": {
                                                                "description": "Owner birthday",
                                                                "type": "string",
                                                                "example": "1298-04-12"
                                                            },
                                                            "occupation": {
                                                                "description": "Owner occupation",
                                                                "type": "string",
                                                                "example": "Developer"
                                                            },
                                                            "hobbies": {
                                                                "description": "Owner hobbies",
                                                                "type": "string",
                                                                "example": "Bikes"
                                                            },
                                                            "pets_owned": {
                                                                "description": "Owner pets owned",
                                                                "type": "string",
                                                                "example": "33 cows"
                                                            },
                                                            "profile_picture": {
                                                                "description": "Owner profile picture URL",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/profile_picture/example.png"
                                                            },
                                                            "favorite_park": {
                                                                "description": "Owner favorite park",
                                                                "type": "string",
                                                                "example": "Park"
                                                            },
                                                            "pet": {
                                                                "description": "Owner pet",
                                                                "properties": {
                                                                    "id": {
                                                                        "description": "Pet ID",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "name": {
                                                                        "description": "Pet name",
                                                                        "type": "string",
                                                                        "example": "Dog"
                                                                    },
                                                                    "gender": {
                                                                        "description": "Pet gender",
                                                                        "type": "string",
                                                                        "example": "male"
                                                                    },
                                                                    "size": {
                                                                        "description": "Pet size",
                                                                        "type": "string",
                                                                        "example": "giant"
                                                                    },
                                                                    "primary_breed": {
                                                                        "description": "Pet primary breed",
                                                                        "type": "string",
                                                                        "example": "Dog"
                                                                    },
                                                                    "secondary_breed": {
                                                                        "description": "Pet secondary breed",
                                                                        "type": "string",
                                                                        "example": "Cat"
                                                                    },
                                                                    "age": {
                                                                        "description": "Pet age",
                                                                        "type": "integer",
                                                                        "example": "12"
                                                                    },
                                                                    "profile_picture": {
                                                                        "description": "Pet profile picture URL",
                                                                        "type": "string",
                                                                        "example": "http://mypets.com/storage/profile_picture/example.png"
                                                                    },
                                                                    "friendliness": {
                                                                        "description": "Pet friendliness",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "activity_level": {
                                                                        "description": "Pet activity level",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "noise_level": {
                                                                        "description": "Pet noise level",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "odebience_level": {
                                                                        "description": "Pet odebience level",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "fetchability": {
                                                                        "description": "Pet fetchbility",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "swimability": {
                                                                        "description": "Pet swimability",
                                                                        "type": "integer",
                                                                        "example": "1"
                                                                    },
                                                                    "city": {
                                                                        "description": "Pet city",
                                                                        "type": "string",
                                                                        "example": "New York"
                                                                    },
                                                                    "state": {
                                                                        "description": "Pet state",
                                                                        "type": "string",
                                                                        "example": "NY"
                                                                    },
                                                                    "like": {
                                                                        "description": "Pet likes",
                                                                        "type": "string",
                                                                        "example": "Apples"
                                                                    },
                                                                    "dislike": {
                                                                        "description": "Pet dislikes",
                                                                        "type": "string",
                                                                        "example": "Bananas"
                                                                    },
                                                                    "favorite_toys": {
                                                                        "description": "Pet favorite toys",
                                                                        "type": "string",
                                                                        "example": "Foot"
                                                                    },
                                                                    "fears": {
                                                                        "description": "Pet fears",
                                                                        "type": "string",
                                                                        "example": "Chicken"
                                                                    },
                                                                    "favorite_places": {
                                                                        "description": "Pet favorite places",
                                                                        "type": "string",
                                                                        "example": "Park"
                                                                    },
                                                                    "spayed": {
                                                                        "description": "Pet spayed. 1 or 0",
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "birthday": {
                                                                        "description": "Pet birthday",
                                                                        "type": "string",
                                                                        "example": "1939-09-01"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/{room_id}": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get messages in chat",
                "description": "Get messages in chat with pagination",
                "operationId": "getMessagesSupportChat",
                "parameters": [
                    {
                        "name": "room_id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Message ID",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "type": {
                                                "description": "Message type. Can be system, text or image",
                                                "type": "string",
                                                "example": "image"
                                            },
                                            "message": {
                                                "description": "Message object. For all message types has one property. For system and text type just text. For image type - path to image",
                                                "properties": {
                                                    "message": {
                                                        "description": "Message text or path to image",
                                                        "type": "string",
                                                        "example": "http://mypets.com/storage/support-chat/example.jpeg"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "date_time_created": {
                                                "description": "Date and time message created",
                                                "type": "string",
                                                "example": "2019-04-17 10:00:00"
                                            },
                                            "is_like": {
                                                "description": "Like message. 1 or 0",
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "sender": {
                                                "description": "Owner object or null if message sended admin",
                                                "properties": {
                                                    "id": {
                                                        "description": "Owner ID",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "first_name": {
                                                        "description": "Owner first name",
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "description": "Owner last name",
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "gender": {
                                                        "description": "Owner gender",
                                                        "type": "string",
                                                        "example": "male"
                                                    },
                                                    "age": {
                                                        "description": "Owner age",
                                                        "type": "integer",
                                                        "example": "12"
                                                    },
                                                    "birthday": {
                                                        "description": "Owner birthday",
                                                        "type": "string",
                                                        "example": "1298-04-12"
                                                    },
                                                    "occupation": {
                                                        "description": "Owner occupation",
                                                        "type": "string",
                                                        "example": "Developer"
                                                    },
                                                    "hobbies": {
                                                        "description": "Owner hobbies",
                                                        "type": "string",
                                                        "example": "Bikes"
                                                    },
                                                    "pets_owned": {
                                                        "description": "Owner pets owned",
                                                        "type": "string",
                                                        "example": "33 cows"
                                                    },
                                                    "profile_picture": {
                                                        "description": "Owner profile picture URL",
                                                        "type": "string",
                                                        "example": "http://mypets.com/storage/profile_picture/example.png"
                                                    },
                                                    "favorite_park": {
                                                        "description": "Owner favorite park",
                                                        "type": "string",
                                                        "example": "Park"
                                                    },
                                                    "pet": {
                                                        "description": "Owner pet",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Pet ID",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "name": {
                                                                "description": "Pet name",
                                                                "type": "string",
                                                                "example": "Dog"
                                                            },
                                                            "gender": {
                                                                "description": "Pet gender",
                                                                "type": "string",
                                                                "example": "male"
                                                            },
                                                            "size": {
                                                                "description": "Pet size",
                                                                "type": "string",
                                                                "example": "giant"
                                                            },
                                                            "primary_breed": {
                                                                "description": "Pet primary breed",
                                                                "type": "string",
                                                                "example": "Dog"
                                                            },
                                                            "secondary_breed": {
                                                                "description": "Pet secondary breed",
                                                                "type": "string",
                                                                "example": "Cat"
                                                            },
                                                            "age": {
                                                                "description": "Pet age",
                                                                "type": "integer",
                                                                "example": "12"
                                                            },
                                                            "profile_picture": {
                                                                "description": "Pet profile picture URL",
                                                                "type": "string",
                                                                "example": "http://mypets.com/storage/profile_picture/example.png"
                                                            },
                                                            "friendliness": {
                                                                "description": "Pet friendliness",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "activity_level": {
                                                                "description": "Pet activity level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "noise_level": {
                                                                "description": "Pet noise level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "odebience_level": {
                                                                "description": "Pet odebience level",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "fetchability": {
                                                                "description": "Pet fetchbility",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "swimability": {
                                                                "description": "Pet swimability",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "city": {
                                                                "description": "Pet city",
                                                                "type": "string",
                                                                "example": "New York"
                                                            },
                                                            "state": {
                                                                "description": "Pet state",
                                                                "type": "string",
                                                                "example": "NY"
                                                            },
                                                            "like": {
                                                                "description": "Pet likes",
                                                                "type": "string",
                                                                "example": "Apples"
                                                            },
                                                            "dislike": {
                                                                "description": "Pet dislikes",
                                                                "type": "string",
                                                                "example": "Bananas"
                                                            },
                                                            "favorite_toys": {
                                                                "description": "Pet favorite toys",
                                                                "type": "string",
                                                                "example": "Foot"
                                                            },
                                                            "fears": {
                                                                "description": "Pet fears",
                                                                "type": "string",
                                                                "example": "Chicken"
                                                            },
                                                            "favorite_places": {
                                                                "description": "Pet favorite places",
                                                                "type": "string",
                                                                "example": "Park"
                                                            },
                                                            "spayed": {
                                                                "description": "Pet spayed. 1 or 0",
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "birthday": {
                                                                "description": "Pet birthday",
                                                                "type": "string",
                                                                "example": "1939-09-01"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room not found.|Np query results for model"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/messages/default": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get default message",
                "description": "Get default message for new chat",
                "operationId": "getSupportChatDefaultMessage",
                "responses": {
                    "200": {
                        "description": "Default message for new chat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Default system message",
                                            "type": "string",
                                            "example": "Hi, Thank you for using MyPet! How can we help you today?"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/{ticket_id}": {
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Send message",
                "description": "Send message for chat",
                "operationId": "sendMessageSupportChat",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "description": "Ticket ID. Send '0' if need create ticket",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "message"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of message. Can be text or image",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "message": {
                                        "description": "Message. If type text - just text, if image - correct base64 string",
                                        "type": "string",
                                        "example": "Hello World!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Message ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "type": {
                                            "description": "Message type. Can be system, text or image",
                                            "type": "string",
                                            "example": "text"
                                        },
                                        "message": {
                                            "description": "Message object. For all message types has one property. For system and text type just text. For image type - path to image",
                                            "properties": {
                                                "message": {
                                                    "description": "Message text or path to image",
                                                    "type": "string",
                                                    "example": "Hello World!"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "date_time_created": {
                                            "description": "Date and time message created",
                                            "type": "string",
                                            "example": "2019-04-19 20:00:00"
                                        },
                                        "is_like": {
                                            "description": "Like message. 1 or 0",
                                            "type": "integer",
                                            "example": "0"
                                        },
                                        "sender": {
                                            "description": "Sender object or null if message sended admin",
                                            "properties": {
                                                "id": {
                                                    "description": "Owner ID",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "first_name": {
                                                    "description": "Owner first name",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "description": "Owner last name",
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "gender": {
                                                    "description": "Owner gender",
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "age": {
                                                    "description": "Owner age",
                                                    "type": "integer",
                                                    "example": "11"
                                                },
                                                "birthday": {
                                                    "description": "Owner birthday",
                                                    "type": "string",
                                                    "example": "1970-01-01"
                                                },
                                                "occupation": {
                                                    "description": "Owner occupation",
                                                    "type": "string",
                                                    "example": "Developer"
                                                },
                                                "hobbies": {
                                                    "description": "Owner hobbies",
                                                    "type": "string",
                                                    "example": "Kill"
                                                },
                                                "pets_owned": {
                                                    "description": "Owner pets owned",
                                                    "type": "string",
                                                    "example": "33 cows"
                                                },
                                                "profile_picture": {
                                                    "description": "Owner profile picture URL",
                                                    "type": "string",
                                                    "example": "http://mypets.com/storage/profile_picture/example.png"
                                                },
                                                "favorite_park": {
                                                    "description": "Owne favorite park",
                                                    "type": "string",
                                                    "example": "Park"
                                                },
                                                "pet": {
                                                    "description": "Pet object",
                                                    "properties": {
                                                        "id": {
                                                            "description": "Pet ID",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "name": {
                                                            "description": "Pet name",
                                                            "type": "string",
                                                            "example": "Muhtar"
                                                        },
                                                        "gender": {
                                                            "description": "Pet gender",
                                                            "type": "string",
                                                            "example": "male"
                                                        },
                                                        "size": {
                                                            "description": "Pet size",
                                                            "type": "string",
                                                            "example": "giant"
                                                        },
                                                        "primary_breed": {
                                                            "description": "Pet primary breed",
                                                            "type": "string",
                                                            "example": "Dog"
                                                        },
                                                        "secondary_breed": {
                                                            "description": "Pet secodary breed",
                                                            "type": "string",
                                                            "example": "Cat"
                                                        },
                                                        "age": {
                                                            "description": "Pet age",
                                                            "type": "integer",
                                                            "example": "13"
                                                        },
                                                        "profile_picture": {
                                                            "description": "Pet profile picture URL",
                                                            "type": "string",
                                                            "example": "http://mypets.com/storage/profile_picture/example.com"
                                                        },
                                                        "friendliness": {
                                                            "description": "Pet friendliness",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "activity_level": {
                                                            "description": "Pet activity level",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "noise_level": {
                                                            "description": "Pet noise level",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "odebience_level": {
                                                            "description": "Pet odebience level",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "fetchability": {
                                                            "description": "Pet fetchability",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "swimability": {
                                                            "description": "Pet swimability",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "city": {
                                                            "description": "Pet city",
                                                            "type": "string",
                                                            "example": "New York"
                                                        },
                                                        "state": {
                                                            "description": "Pet state",
                                                            "type": "string",
                                                            "example": "NY"
                                                        },
                                                        "like": {
                                                            "description": "Pet likes",
                                                            "type": "string",
                                                            "example": "Apples"
                                                        },
                                                        "dislike": {
                                                            "description": "Pet dislikes",
                                                            "type": "string",
                                                            "example": "Bananas"
                                                        },
                                                        "favorite_toys": {
                                                            "description": "Pet favorite toys",
                                                            "type": "string",
                                                            "example": "God"
                                                        },
                                                        "fears": {
                                                            "description": "Pet fears",
                                                            "type": "string",
                                                            "example": "Foot"
                                                        },
                                                        "favorite_places": {
                                                            "description": "Pet favorite places",
                                                            "type": "string",
                                                            "example": "Land"
                                                        },
                                                        "spayed": {
                                                            "description": "Pet spayed. 1 or 0",
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "birthday": {
                                                            "description": "Pet birthday",
                                                            "type": "string",
                                                            "example": "1939-09-01"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket already resolved."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message type not found.|Support chat not found.|No query results for model"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "field": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Invalid data"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/to/read": {
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Read messages in chat room",
                "description": "Read messages in chat room",
                "operationId": "readMessagesSupportRoom",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "ticket_id"
                                ],
                                "properties": {
                                    "ticket_id": {
                                        "description": "Ticket ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat room not found.|No query results for model"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/is/read": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Check unread chats",
                "description": "Are there chats not read",
                "operationId": "isReadSupportChats",
                "responses": {
                    "200": {
                        "description": "Have all chats been read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_read": {
                                            "description": "Have all chats been read",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support-chats/to/like/{ticket_id}/{message_id}": {
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Like message",
                "description": "Like message",
                "operationId": "likeSupportChatMessage",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat room not found.|No query results for model"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/updates": {
            "get": {
                "tags": [
                    "Updates and Reminders"
                ],
                "summary": "Get updates and reminders",
                "description": "Get all updates and events reminders. Social events reminder - 72h. Care events reminder - 24h",
                "operationId": "updatesGet",
                "responses": {
                    "200": {
                        "description": "Updates and Reminders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "description": "Start date of events as key for events",
                                            "properties": {
                                                "START_DATE_EVENTS": {
                                                    "description": "Social events from now to add 72h, care events from now to add 24h",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "Event ID",
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "description": "Type of event",
                                                                "type": "string",
                                                                "example": "Care"
                                                            },
                                                            "name": {
                                                                "description": "Name of event",
                                                                "type": "string",
                                                                "example": "Event name"
                                                            },
                                                            "from_date": {
                                                                "description": "Start date of event",
                                                                "type": "string",
                                                                "example": "2019-04-12"
                                                            },
                                                            "from_time": {
                                                                "description": "Start time of event",
                                                                "type": "string",
                                                                "example": "12:00"
                                                            },
                                                            "to_time": {
                                                                "description": "End time of event",
                                                                "type": "string",
                                                                "example": "13:00"
                                                            },
                                                            "repeat": {
                                                                "description": "Repeat numbers of week",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "where": {
                                                                "description": "Where to be event",
                                                                "type": "string",
                                                                "example": "Park"
                                                            },
                                                            "notes": {
                                                                "description": "Notes of event",
                                                                "type": "string",
                                                                "example": "Note"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "updates": {
                                            "description": "Updates list",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Update ID",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "image": {
                                                        "description": "Image of update",
                                                        "type": "string",
                                                        "example": "http://mypets.com/storage/updates/example.com"
                                                    },
                                                    "title": {
                                                        "description": "Title of update",
                                                        "type": "string",
                                                        "example": "Title"
                                                    },
                                                    "description": {
                                                        "description": "Description of update",
                                                        "type": "string",
                                                        "example": "Description"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/updates/{update_id}": {
            "get": {
                "tags": [
                    "Updates and Reminders"
                ],
                "summary": "Get update details",
                "description": "Get update details",
                "operationId": "updateGet",
                "parameters": [
                    {
                        "name": "update_id",
                        "in": "path",
                        "description": "Update ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Update ID",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "image": {
                                            "description": "Image of update",
                                            "type": "string",
                                            "example": "http://mypets.com/storage/updates/example.com"
                                        },
                                        "title": {
                                            "description": "Title of update",
                                            "type": "string",
                                            "example": "Title"
                                        },
                                        "description": {
                                            "description": "Description of update",
                                            "type": "string",
                                            "example": "Description"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error or registration error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated.|Sign-Up steps not done."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query result from model."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}